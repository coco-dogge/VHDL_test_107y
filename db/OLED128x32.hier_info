|OLED128x32
ck => i2c_master:u0.clk
ck => sd178_rw.CLK
ck => sd178_data_wr[0].CLK
ck => sd178_data_wr[1].CLK
ck => sd178_data_wr[2].CLK
ck => sd178_data_wr[3].CLK
ck => sd178_data_wr[4].CLK
ck => sd178_data_wr[5].CLK
ck => sd178_data_wr[6].CLK
ck => sd178_data_wr[7].CLK
ck => sd178_ena.CLK
ck => SD178_nrst~reg0.CLK
ck => \sd178_dri:cnt_loop[0].CLK
ck => \sd178_dri:cnt_loop[1].CLK
ck => \sd178_dri:cnt_loop[2].CLK
ck => \sd178_dri:cnt_loop[3].CLK
ck => \sd178_dri:cnt_loop[4].CLK
ck => \sd178_dri:cnt_loop[5].CLK
ck => \sd178_dri:cnt_byte[0].CLK
ck => \sd178_dri:cnt_byte[1].CLK
ck => \sd178_dri:cnt_byte[2].CLK
ck => \sd178_dri:cnt_byte[3].CLK
ck => \sd178_dri:cnt_byte[4].CLK
ck => \sd178_dri:t[0].CLK
ck => \sd178_dri:t[1].CLK
ck => \sd178_dri:t[2].CLK
ck => \sd178_dri:t[3].CLK
ck => \sd178_dri:t[4].CLK
ck => \sd178_dri:t[5].CLK
ck => \sd178_dri:t[6].CLK
ck => \sd178_dri:t[7].CLK
ck => \sd178_dri:t[8].CLK
ck => \sd178_dri:t[9].CLK
ck => \sd178_dri:t[10].CLK
ck => \sd178_dri:t[11].CLK
ck => \sd178_dri:t[12].CLK
ck => \sd178_dri:t[13].CLK
ck => \sd178_dri:t[14].CLK
ck => \sd178_dri:t[15].CLK
ck => \sd178_dri:t[16].CLK
ck => \sd178_dri:t[17].CLK
ck => \sd178_dri:t[18].CLK
ck => \sd178_dri:t[19].CLK
ck => \sd178_dri:t[20].CLK
ck => \sd178_dri:t[21].CLK
ck => \sd178_dri:t[22].CLK
ck => \sd178_dri:t[23].CLK
ck => \sd178_dri:t[24].CLK
ck => \sd178_dri:t[25].CLK
ck => \sd178_dri:s178[0].CLK
ck => \sd178_dri:s178[1].CLK
ck => \sd178_dri:s178[2].CLK
ck => \sd178_dri:s178[3].CLK
ck => \sd178_dri:s178[4].CLK
ck => TSL2561:u1.clk_50M
ck => DHT11:u2.clk_50M
ck => up_mdu2:u5.ck
ck => up_mdu3:u6.ck
ck => up_mdu4:u7.ck
ck => up_mdu5:u8.ck
nReset => TSL2561:u1.nrst
nReset => DHT11:u2.nrst
nReset => address[0].ACLR
nReset => address[1].ACLR
nReset => address[2].ACLR
nReset => address[3].ACLR
nReset => address[4].ACLR
nReset => address[5].ACLR
nReset => address[6].ACLR
nReset => address[7].ACLR
nReset => address[8].ACLR
nReset => address[9].ACLR
nReset => address[10].ACLR
nReset => address[11].ACLR
nReset => address[12].ACLR
nReset => address[13].ACLR
nReset => address[14].ACLR
nReset => address[15].ACLR
nReset => fsm[0].ACLR
nReset => fsm[1].ACLR
nReset => fsm[2].ACLR
nReset => fsm[3].ACLR
nReset => fsm[4].ACLR
nReset => fsm[5].ACLR
nReset => fsm[6].ACLR
nReset => fsm[7].ACLR
nReset => SCL~reg0.PRESET
nReset => CS~reg0.PRESET
nReset => DC~reg0.ACLR
nReset => RES~reg0.PRESET
nReset => delay_1[0].ACLR
nReset => delay_1[1].ACLR
nReset => delay_1[2].ACLR
nReset => delay_1[3].ACLR
nReset => delay_1[4].ACLR
nReset => delay_1[5].ACLR
nReset => delay_1[6].ACLR
nReset => delay_1[7].ACLR
nReset => delay_1[8].ACLR
nReset => delay_1[9].ACLR
nReset => delay_1[10].ACLR
nReset => delay_1[11].ACLR
nReset => delay_1[12].ACLR
nReset => delay_1[13].ACLR
nReset => delay_1[14].ACLR
nReset => delay_1[15].ACLR
nReset => delay_1[16].ACLR
nReset => delay_1[17].ACLR
nReset => delay_1[18].ACLR
nReset => delay_1[19].ACLR
nReset => delay_1[20].ACLR
nReset => delay_1[21].ACLR
nReset => delay_1[22].ACLR
nReset => delay_1[23].ACLR
nReset => delay_1[24].ACLR
nReset => sd178_dri.IN1
nReset => motor_pwm1~reg0.ACLR
nReset => motor_out2~reg0.ACLR
nReset => motor_out1~reg0.ACLR
nReset => hi_lo.ENA
nReset => bit_cnt[2].ENA
nReset => bit_cnt[1].ENA
nReset => bit_cnt[0].ENA
nReset => fsm_back[7].ENA
nReset => fsm_back[6].ENA
nReset => fsm_back[5].ENA
nReset => fsm_back[4].ENA
nReset => fsm_back[3].ENA
nReset => fsm_back[2].ENA
nReset => fsm_back[1].ENA
nReset => fsm_back[0].ENA
nReset => add[14].ENA
nReset => add[13].ENA
nReset => add[12].ENA
nReset => add[11].ENA
nReset => add[10].ENA
nReset => add[9].ENA
nReset => add[8].ENA
nReset => add[7].ENA
nReset => add[6].ENA
nReset => add[5].ENA
nReset => add[4].ENA
nReset => add[3].ENA
nReset => add[2].ENA
nReset => add[1].ENA
nReset => add[0].ENA
nReset => RGB_data[7].ENA
nReset => RGB_data[6].ENA
nReset => RGB_data[5].ENA
nReset => RGB_data[4].ENA
nReset => RGB_data[3].ENA
nReset => RGB_data[2].ENA
nReset => RGB_data[1].ENA
nReset => RGB_data[0].ENA
nReset => SDA~reg0.ENA
TSL2561_sda <> TSL2561:u1.sda
TSL2561_scl <> TSL2561:u1.scl
SD178_sda <> i2c_master:u0.sda
SD178_scl <> i2c_master:u0.scl
SD178_nrst << SD178_nrst~reg0.DB_MAX_OUTPUT_PORT_TYPE
SHT11_PIN <> DHT11:u2.dat_bus
sw[0] => Mux254.IN36
sw[0] => Mux255.IN36
sw[1] => Mux256.IN36
sw[2] => ~NO_FANOUT~
sw[3] => ~NO_FANOUT~
sw[4] => ~NO_FANOUT~
sw[5] => ~NO_FANOUT~
sw[6] => ~NO_FANOUT~
sw[7] => ~NO_FANOUT~
ki[0] => Equal9.IN7
ki[1] => Equal9.IN6
ki[1] => pb.DATAA
ki[2] => Equal9.IN5
ki[2] => pb.DATAA
ki[3] => Equal9.IN4
ki[3] => pb.OUTPUTSELECT
ki[3] => pb.OUTPUTSELECT
ko[0] << ko[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ko[1] << ko[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ko[2] << ko[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ko[3] << ko[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debug <= comb.DB_MAX_OUTPUT_PORT_TYPE
segout[0] << segout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout[1] << segout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout[2] << segout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout[3] << segout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout[4] << segout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout[5] << segout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout[6] << segout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout[7] << segout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout_2[0] << segout_2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout_2[1] << segout_2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout_2[2] << segout_2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout_2[3] << segout_2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout_2[4] << segout_2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout_2[5] << segout_2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout_2[6] << segout_2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout_2[7] << segout_2[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_scan[0] << seg_scan[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_scan[1] << seg_scan[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_scan[2] << seg_scan[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_scan[3] << seg_scan[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_scan[4] << seg_scan[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_scan[5] << seg_scan[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_scan[6] << seg_scan[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_scan[7] << seg_scan[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BL <= <VCC>
RES <= RES~reg0.DB_MAX_OUTPUT_PORT_TYPE
CS <= CS~reg0.DB_MAX_OUTPUT_PORT_TYPE
DC <= DC~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDA <= SDA~reg0.DB_MAX_OUTPUT_PORT_TYPE
SCL <= SCL~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[0] << <GND>
LED[1] << <GND>
LED[2] << <GND>
LED[3] << <GND>
LED[4] << <GND>
LED[5] << <GND>
LED[6] << <GND>
LED[7] << <GND>
LED[8] << <GND>
LED[9] << <GND>
LED[10] << <GND>
LED[11] << LED[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[12] << LED[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[13] << LED[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[14] << LED[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[15] << LED[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
motor_out1 <= motor_out1~reg0.DB_MAX_OUTPUT_PORT_TYPE
motor_out2 <= motor_out2~reg0.DB_MAX_OUTPUT_PORT_TYPE
motor_pwm1 <= motor_pwm1~reg0.DB_MAX_OUTPUT_PORT_TYPE


|OLED128x32|i2c_master:u0
clk => data_rx[0].CLK
clk => data_rx[1].CLK
clk => data_rx[2].CLK
clk => data_rx[3].CLK
clk => data_rx[4].CLK
clk => data_rx[5].CLK
clk => data_rx[6].CLK
clk => data_rx[7].CLK
clk => data_tx[0].CLK
clk => data_tx[1].CLK
clk => data_tx[2].CLK
clk => data_tx[3].CLK
clk => data_tx[4].CLK
clk => data_tx[5].CLK
clk => data_tx[6].CLK
clk => data_tx[7].CLK
clk => addr_rw[0].CLK
clk => addr_rw[1].CLK
clk => addr_rw[2].CLK
clk => addr_rw[3].CLK
clk => addr_rw[4].CLK
clk => addr_rw[5].CLK
clk => addr_rw[6].CLK
clk => addr_rw[7].CLK
clk => data_rd[0]~reg0.CLK
clk => data_rd[1]~reg0.CLK
clk => data_rd[2]~reg0.CLK
clk => data_rd[3]~reg0.CLK
clk => data_rd[4]~reg0.CLK
clk => data_rd[5]~reg0.CLK
clk => data_rd[6]~reg0.CLK
clk => data_rd[7]~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => ack_error~reg0.CLK
clk => sda_int.CLK
clk => scl_ena.CLK
clk => busy~reg0.CLK
clk => data_clk.CLK
clk => scl_clk.CLK
clk => data_clk_prev.CLK
clk => stretch.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => state~1.DATAIN
reset_n => data_rd[0]~reg0.ACLR
reset_n => data_rd[1]~reg0.ACLR
reset_n => data_rd[2]~reg0.ACLR
reset_n => data_rd[3]~reg0.ACLR
reset_n => data_rd[4]~reg0.ACLR
reset_n => data_rd[5]~reg0.ACLR
reset_n => data_rd[6]~reg0.ACLR
reset_n => data_rd[7]~reg0.ACLR
reset_n => bit_cnt[0].PRESET
reset_n => bit_cnt[1].PRESET
reset_n => bit_cnt[2].PRESET
reset_n => ack_error~reg0.ACLR
reset_n => sda_int.PRESET
reset_n => scl_ena.ACLR
reset_n => busy~reg0.PRESET
reset_n => stretch.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
reset_n => count[10].ACLR
reset_n => count[11].ACLR
reset_n => count[12].ACLR
reset_n => state~3.DATAIN
reset_n => data_clk_prev.ENA
reset_n => scl_clk.ENA
reset_n => data_clk.ENA
reset_n => addr_rw[7].ENA
reset_n => addr_rw[6].ENA
reset_n => addr_rw[5].ENA
reset_n => addr_rw[4].ENA
reset_n => addr_rw[3].ENA
reset_n => addr_rw[2].ENA
reset_n => addr_rw[1].ENA
reset_n => addr_rw[0].ENA
reset_n => data_tx[7].ENA
reset_n => data_tx[6].ENA
reset_n => data_tx[5].ENA
reset_n => data_tx[4].ENA
reset_n => data_tx[3].ENA
reset_n => data_tx[2].ENA
reset_n => data_tx[1].ENA
reset_n => data_tx[0].ENA
reset_n => data_rx[7].ENA
reset_n => data_rx[6].ENA
reset_n => data_rx[5].ENA
reset_n => data_rx[4].ENA
reset_n => data_rx[3].ENA
reset_n => data_rx[2].ENA
reset_n => data_rx[1].ENA
reset_n => data_rx[0].ENA
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => process_1.IN1
ena => busy.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => Selector0.IN6
ena => Selector18.IN4
ena => Selector17.IN2
ena => Selector22.IN1
addr[0] => addr_rw.DATAB
addr[0] => Equal2.IN6
addr[1] => addr_rw.DATAB
addr[1] => Equal2.IN5
addr[2] => addr_rw.DATAB
addr[2] => Equal2.IN4
addr[3] => addr_rw.DATAB
addr[3] => Equal2.IN3
addr[4] => addr_rw.DATAB
addr[4] => Equal2.IN2
addr[5] => addr_rw.DATAB
addr[5] => Equal2.IN1
addr[6] => addr_rw.DATAB
addr[6] => Equal2.IN0
rw => addr_rw.DATAB
rw => Equal2.IN7
data_wr[0] => data_tx.DATAB
data_wr[0] => Mux4.IN7
data_wr[1] => data_tx.DATAB
data_wr[1] => Mux4.IN6
data_wr[2] => data_tx.DATAB
data_wr[2] => Mux4.IN5
data_wr[3] => data_tx.DATAB
data_wr[3] => Mux4.IN4
data_wr[4] => data_tx.DATAB
data_wr[4] => Mux4.IN3
data_wr[5] => data_tx.DATAB
data_wr[5] => Mux4.IN2
data_wr[6] => data_tx.DATAB
data_wr[6] => Mux4.IN1
data_wr[7] => data_tx.DATAB
data_wr[7] => Mux4.IN0
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[0] <= data_rd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[1] <= data_rd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[2] <= data_rd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[3] <= data_rd[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[4] <= data_rd[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[5] <= data_rd[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[6] <= data_rd[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[7] <= data_rd[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_error <= ack_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
scl <> scl


|OLED128x32|TSL2561:u1
clk_50M => i2c_master:u0.clk
clk_50M => TSL2561_data[0]~reg0.CLK
clk_50M => TSL2561_data[1]~reg0.CLK
clk_50M => TSL2561_data[2]~reg0.CLK
clk_50M => TSL2561_data[3]~reg0.CLK
clk_50M => TSL2561_data[4]~reg0.CLK
clk_50M => TSL2561_data[5]~reg0.CLK
clk_50M => TSL2561_data[6]~reg0.CLK
clk_50M => TSL2561_data[7]~reg0.CLK
clk_50M => TSL2561_data[8]~reg0.CLK
clk_50M => TSL2561_data[9]~reg0.CLK
clk_50M => TSL2561_data[10]~reg0.CLK
clk_50M => TSL2561_data[11]~reg0.CLK
clk_50M => TSL2561_data[12]~reg0.CLK
clk_50M => TSL2561_data[13]~reg0.CLK
clk_50M => TSL2561_data[14]~reg0.CLK
clk_50M => data0[1].CLK
clk_50M => data0[2].CLK
clk_50M => data0[3].CLK
clk_50M => data0[4].CLK
clk_50M => data0[5].CLK
clk_50M => data0[6].CLK
clk_50M => data0[7].CLK
clk_50M => data0[8].CLK
clk_50M => data0[9].CLK
clk_50M => data0[10].CLK
clk_50M => data0[11].CLK
clk_50M => data0[12].CLK
clk_50M => data0[13].CLK
clk_50M => data0[14].CLK
clk_50M => data0[15].CLK
clk_50M => rw.CLK
clk_50M => data_wr[0].CLK
clk_50M => data_wr[1].CLK
clk_50M => data_wr[2].CLK
clk_50M => data_wr[3].CLK
clk_50M => data_wr[4].CLK
clk_50M => data_wr[5].CLK
clk_50M => data_wr[6].CLK
clk_50M => data_wr[7].CLK
clk_50M => addr[0].CLK
clk_50M => addr[1].CLK
clk_50M => addr[2].CLK
clk_50M => addr[3].CLK
clk_50M => addr[4].CLK
clk_50M => addr[5].CLK
clk_50M => addr[6].CLK
clk_50M => ena.CLK
clk_50M => cnt_delay[0].CLK
clk_50M => cnt_delay[1].CLK
clk_50M => cnt_delay[2].CLK
clk_50M => cnt_delay[3].CLK
clk_50M => cnt_delay[4].CLK
clk_50M => cnt_delay[5].CLK
clk_50M => cnt_delay[6].CLK
clk_50M => cnt_delay[7].CLK
clk_50M => cnt_delay[8].CLK
clk_50M => cnt_delay[9].CLK
clk_50M => cnt_delay[10].CLK
clk_50M => cnt_delay[11].CLK
clk_50M => cnt_delay[12].CLK
clk_50M => cnt_delay[13].CLK
clk_50M => cnt_delay[14].CLK
clk_50M => cnt_delay[15].CLK
clk_50M => cnt_delay[16].CLK
clk_50M => cnt_delay[17].CLK
clk_50M => cnt_delay[18].CLK
clk_50M => cnt_delay[19].CLK
clk_50M => cnt_delay[20].CLK
clk_50M => cnt_delay[21].CLK
clk_50M => cnt_delay[22].CLK
clk_50M => cnt_delay[23].CLK
clk_50M => cnt_delay[24].CLK
clk_50M => cnt_delay[25].CLK
clk_50M => IICState~18.DATAIN
nrst => i2c_master:u0.reset_n
nrst => ena.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => IICState.OUTPUTSELECT
nrst => TSL2561_data[14]~reg0.ENA
nrst => TSL2561_data[13]~reg0.ENA
nrst => TSL2561_data[12]~reg0.ENA
nrst => TSL2561_data[11]~reg0.ENA
nrst => TSL2561_data[10]~reg0.ENA
nrst => TSL2561_data[9]~reg0.ENA
nrst => TSL2561_data[8]~reg0.ENA
nrst => TSL2561_data[7]~reg0.ENA
nrst => TSL2561_data[6]~reg0.ENA
nrst => TSL2561_data[5]~reg0.ENA
nrst => TSL2561_data[4]~reg0.ENA
nrst => TSL2561_data[3]~reg0.ENA
nrst => TSL2561_data[2]~reg0.ENA
nrst => TSL2561_data[1]~reg0.ENA
nrst => TSL2561_data[0]~reg0.ENA
nrst => data0[1].ENA
nrst => data0[2].ENA
nrst => data0[3].ENA
nrst => data0[4].ENA
nrst => data0[5].ENA
nrst => data0[6].ENA
nrst => data0[7].ENA
nrst => data0[8].ENA
nrst => data0[9].ENA
nrst => data0[10].ENA
nrst => data0[11].ENA
nrst => data0[12].ENA
nrst => data0[13].ENA
nrst => data0[14].ENA
nrst => data0[15].ENA
nrst => rw.ENA
nrst => data_wr[0].ENA
nrst => data_wr[1].ENA
nrst => data_wr[2].ENA
nrst => data_wr[3].ENA
nrst => data_wr[4].ENA
nrst => data_wr[5].ENA
nrst => data_wr[6].ENA
nrst => data_wr[7].ENA
nrst => addr[0].ENA
nrst => addr[1].ENA
nrst => addr[2].ENA
nrst => addr[3].ENA
nrst => addr[4].ENA
nrst => addr[5].ENA
nrst => addr[6].ENA
nrst => cnt_delay[0].ENA
nrst => cnt_delay[1].ENA
nrst => cnt_delay[2].ENA
nrst => cnt_delay[3].ENA
nrst => cnt_delay[4].ENA
nrst => cnt_delay[5].ENA
nrst => cnt_delay[6].ENA
nrst => cnt_delay[7].ENA
nrst => cnt_delay[8].ENA
nrst => cnt_delay[9].ENA
nrst => cnt_delay[10].ENA
nrst => cnt_delay[11].ENA
nrst => cnt_delay[12].ENA
nrst => cnt_delay[13].ENA
nrst => cnt_delay[14].ENA
nrst => cnt_delay[15].ENA
nrst => cnt_delay[16].ENA
nrst => cnt_delay[17].ENA
nrst => cnt_delay[18].ENA
nrst => cnt_delay[19].ENA
nrst => cnt_delay[20].ENA
nrst => cnt_delay[21].ENA
nrst => cnt_delay[22].ENA
nrst => cnt_delay[23].ENA
nrst => cnt_delay[24].ENA
nrst => cnt_delay[25].ENA
sda <> i2c_master:u0.sda
scl <> i2c_master:u0.scl
TSL2561_data[0] <= TSL2561_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[1] <= TSL2561_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[2] <= TSL2561_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[3] <= TSL2561_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[4] <= TSL2561_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[5] <= TSL2561_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[6] <= TSL2561_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[7] <= TSL2561_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[8] <= TSL2561_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[9] <= TSL2561_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[10] <= TSL2561_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[11] <= TSL2561_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[12] <= TSL2561_data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[13] <= TSL2561_data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TSL2561_data[14] <= TSL2561_data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|OLED128x32|TSL2561:u1|i2c_master:u0
clk => data_rx[0].CLK
clk => data_rx[1].CLK
clk => data_rx[2].CLK
clk => data_rx[3].CLK
clk => data_rx[4].CLK
clk => data_rx[5].CLK
clk => data_rx[6].CLK
clk => data_rx[7].CLK
clk => data_tx[0].CLK
clk => data_tx[1].CLK
clk => data_tx[2].CLK
clk => data_tx[3].CLK
clk => data_tx[4].CLK
clk => data_tx[5].CLK
clk => data_tx[6].CLK
clk => data_tx[7].CLK
clk => addr_rw[0].CLK
clk => addr_rw[1].CLK
clk => addr_rw[2].CLK
clk => addr_rw[3].CLK
clk => addr_rw[4].CLK
clk => addr_rw[5].CLK
clk => addr_rw[6].CLK
clk => addr_rw[7].CLK
clk => data_rd[0]~reg0.CLK
clk => data_rd[1]~reg0.CLK
clk => data_rd[2]~reg0.CLK
clk => data_rd[3]~reg0.CLK
clk => data_rd[4]~reg0.CLK
clk => data_rd[5]~reg0.CLK
clk => data_rd[6]~reg0.CLK
clk => data_rd[7]~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => ack_error~reg0.CLK
clk => sda_int.CLK
clk => scl_ena.CLK
clk => busy~reg0.CLK
clk => data_clk.CLK
clk => scl_clk.CLK
clk => data_clk_prev.CLK
clk => stretch.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => state~1.DATAIN
reset_n => data_rd[0]~reg0.ACLR
reset_n => data_rd[1]~reg0.ACLR
reset_n => data_rd[2]~reg0.ACLR
reset_n => data_rd[3]~reg0.ACLR
reset_n => data_rd[4]~reg0.ACLR
reset_n => data_rd[5]~reg0.ACLR
reset_n => data_rd[6]~reg0.ACLR
reset_n => data_rd[7]~reg0.ACLR
reset_n => bit_cnt[0].PRESET
reset_n => bit_cnt[1].PRESET
reset_n => bit_cnt[2].PRESET
reset_n => ack_error~reg0.ACLR
reset_n => sda_int.PRESET
reset_n => scl_ena.ACLR
reset_n => busy~reg0.PRESET
reset_n => stretch.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => state~3.DATAIN
reset_n => data_clk_prev.ENA
reset_n => scl_clk.ENA
reset_n => data_clk.ENA
reset_n => addr_rw[7].ENA
reset_n => addr_rw[6].ENA
reset_n => addr_rw[5].ENA
reset_n => addr_rw[4].ENA
reset_n => addr_rw[3].ENA
reset_n => addr_rw[2].ENA
reset_n => addr_rw[1].ENA
reset_n => addr_rw[0].ENA
reset_n => data_tx[7].ENA
reset_n => data_tx[6].ENA
reset_n => data_tx[5].ENA
reset_n => data_tx[4].ENA
reset_n => data_tx[3].ENA
reset_n => data_tx[2].ENA
reset_n => data_tx[1].ENA
reset_n => data_tx[0].ENA
reset_n => data_rx[7].ENA
reset_n => data_rx[6].ENA
reset_n => data_rx[5].ENA
reset_n => data_rx[4].ENA
reset_n => data_rx[3].ENA
reset_n => data_rx[2].ENA
reset_n => data_rx[1].ENA
reset_n => data_rx[0].ENA
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => process_1.IN1
ena => busy.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => Selector0.IN6
ena => Selector18.IN4
ena => Selector17.IN2
ena => Selector22.IN1
addr[0] => addr_rw.DATAB
addr[0] => Equal2.IN6
addr[1] => addr_rw.DATAB
addr[1] => Equal2.IN5
addr[2] => addr_rw.DATAB
addr[2] => Equal2.IN4
addr[3] => addr_rw.DATAB
addr[3] => Equal2.IN3
addr[4] => addr_rw.DATAB
addr[4] => Equal2.IN2
addr[5] => addr_rw.DATAB
addr[5] => Equal2.IN1
addr[6] => addr_rw.DATAB
addr[6] => Equal2.IN0
rw => addr_rw.DATAB
rw => Equal2.IN7
data_wr[0] => data_tx.DATAB
data_wr[0] => Mux4.IN7
data_wr[1] => data_tx.DATAB
data_wr[1] => Mux4.IN6
data_wr[2] => data_tx.DATAB
data_wr[2] => Mux4.IN5
data_wr[3] => data_tx.DATAB
data_wr[3] => Mux4.IN4
data_wr[4] => data_tx.DATAB
data_wr[4] => Mux4.IN3
data_wr[5] => data_tx.DATAB
data_wr[5] => Mux4.IN2
data_wr[6] => data_tx.DATAB
data_wr[6] => Mux4.IN1
data_wr[7] => data_tx.DATAB
data_wr[7] => Mux4.IN0
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[0] <= data_rd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[1] <= data_rd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[2] <= data_rd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[3] <= data_rd[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[4] <= data_rd[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[5] <= data_rd[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[6] <= data_rd[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[7] <= data_rd[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_error <= ack_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
scl <> scl


|OLED128x32|DHT11:u2
clk_50M => clk_1M.CLK
clk_50M => cnt[0].CLK
clk_50M => cnt[1].CLK
clk_50M => cnt[2].CLK
clk_50M => cnt[3].CLK
clk_50M => cnt[4].CLK
clk_50M => cnt[5].CLK
nrst => DHT11_BASIC:u0.rst
dat_bus <> DHT11_BASIC:u0.dat_bus
HU[0] <= DHT11_BASIC:u0.HU[0]
HU[1] <= DHT11_BASIC:u0.HU[1]
HU[2] <= DHT11_BASIC:u0.HU[2]
HU[3] <= DHT11_BASIC:u0.HU[3]
HU[4] <= DHT11_BASIC:u0.HU[4]
HU[5] <= DHT11_BASIC:u0.HU[5]
HU[6] <= DHT11_BASIC:u0.HU[6]
HU[7] <= DHT11_BASIC:u0.HU[7]
TE[0] <= DHT11_BASIC:u0.TE[0]
TE[1] <= DHT11_BASIC:u0.TE[1]
TE[2] <= DHT11_BASIC:u0.TE[2]
TE[3] <= DHT11_BASIC:u0.TE[3]
TE[4] <= DHT11_BASIC:u0.TE[4]
TE[5] <= DHT11_BASIC:u0.TE[5]
TE[6] <= DHT11_BASIC:u0.TE[6]
TE[7] <= DHT11_BASIC:u0.TE[7]
error <= DHT11_BASIC:u0.error


|OLED128x32|DHT11:u2|DHT11_BASIC:u0
clk => TE[0]~reg0.CLK
clk => TE[1]~reg0.CLK
clk => TE[2]~reg0.CLK
clk => TE[3]~reg0.CLK
clk => TE[4]~reg0.CLK
clk => TE[5]~reg0.CLK
clk => TE[6]~reg0.CLK
clk => TE[7]~reg0.CLK
clk => HU[0]~reg0.CLK
clk => HU[1]~reg0.CLK
clk => HU[2]~reg0.CLK
clk => HU[3]~reg0.CLK
clk => HU[4]~reg0.CLK
clk => HU[5]~reg0.CLK
clk => HU[6]~reg0.CLK
clk => HU[7]~reg0.CLK
clk => data_buffer.CLK
clk => ret_count[0].CLK
clk => ret_count[1].CLK
clk => ret_count[2].CLK
clk => ret_count[3].CLK
clk => ret_count[4].CLK
clk => ret_count[5].CLK
clk => ret_count[6].CLK
clk => ret_count[7].CLK
clk => ret_count[8].CLK
clk => ret_count[9].CLK
clk => ret_count[10].CLK
clk => ret_count[11].CLK
clk => ret_count[12].CLK
clk => ret_count[13].CLK
clk => ret_count[14].CLK
clk => ret_count[15].CLK
clk => ret_count[16].CLK
clk => ret_count[17].CLK
clk => ret_count[18].CLK
clk => ret_count[19].CLK
clk => ret_count[20].CLK
clk => ret_count[21].CLK
clk => ret_count[22].CLK
clk => ret_count[23].CLK
clk => ret_count[24].CLK
clk => ret_count[25].CLK
clk => ret_count[26].CLK
clk => ret_count[27].CLK
clk => ret_count[28].CLK
clk => ret_count[29].CLK
clk => ret_count[30].CLK
clk => ret_count[31].CLK
clk => keep_count[0].CLK
clk => keep_count[1].CLK
clk => keep_count[2].CLK
clk => keep_count[3].CLK
clk => keep_count[4].CLK
clk => keep_count[5].CLK
clk => keep_count[6].CLK
clk => keep_count[7].CLK
clk => keep_count[8].CLK
clk => keep_count[9].CLK
clk => keep_count[10].CLK
clk => keep_count[11].CLK
clk => keep_count[12].CLK
clk => keep_count[13].CLK
clk => keep_count[14].CLK
clk => keep_count[15].CLK
clk => keep_count[16].CLK
clk => keep_count[17].CLK
clk => keep_count[18].CLK
clk => keep_count[19].CLK
clk => keep_count[20].CLK
clk => keep_count[21].CLK
clk => keep_count[22].CLK
clk => keep_count[23].CLK
clk => keep_count[24].CLK
clk => keep_count[25].CLK
clk => keep_count[26].CLK
clk => keep_count[27].CLK
clk => keep_count[28].CLK
clk => keep_count[29].CLK
clk => keep_count[30].CLK
clk => keep_count[31].CLK
clk => hold_count[0].CLK
clk => hold_count[1].CLK
clk => hold_count[2].CLK
clk => hold_count[3].CLK
clk => hold_count[4].CLK
clk => hold_count[5].CLK
clk => hold_count[6].CLK
clk => hold_count[7].CLK
clk => hold_count[8].CLK
clk => hold_count[9].CLK
clk => hold_count[10].CLK
clk => hold_count[11].CLK
clk => hold_count[12].CLK
clk => hold_count[13].CLK
clk => hold_count[14].CLK
clk => hold_count[15].CLK
clk => hold_count[16].CLK
clk => hold_count[17].CLK
clk => hold_count[18].CLK
clk => hold_count[19].CLK
clk => hold_count[20].CLK
clk => hold_count[21].CLK
clk => hold_count[22].CLK
clk => hold_count[23].CLK
clk => hold_count[24].CLK
clk => hold_count[25].CLK
clk => hold_count[26].CLK
clk => hold_count[27].CLK
clk => hold_count[28].CLK
clk => hold_count[29].CLK
clk => hold_count[30].CLK
clk => hold_count[31].CLK
clk => level.CLK
clk => main_count[0].CLK
clk => main_count[1].CLK
clk => main_count[2].CLK
clk => main_count[3].CLK
clk => main_count[4].CLK
clk => main_count[5].CLK
clk => main_count[6].CLK
clk => main_count[7].CLK
clk => main_count[8].CLK
clk => main_count[9].CLK
clk => main_count[10].CLK
clk => main_count[11].CLK
clk => main_count[12].CLK
clk => main_count[13].CLK
clk => main_count[14].CLK
clk => main_count[15].CLK
clk => main_count[16].CLK
clk => main_count[17].CLK
clk => main_count[18].CLK
clk => main_count[19].CLK
clk => main_count[20].CLK
clk => main_count[21].CLK
clk => main_count[22].CLK
clk => main_count[23].CLK
clk => main_count[24].CLK
clk => main_count[25].CLK
clk => main_count[26].CLK
clk => main_count[27].CLK
clk => main_count[28].CLK
clk => main_count[29].CLK
clk => main_count[30].CLK
clk => main_count[31].CLK
clk => error~reg0.CLK
clk => k[0].CLK
clk => k[1].CLK
clk => k[2].CLK
clk => k[3].CLK
clk => k[4].CLK
clk => k[5].CLK
clk => k[6].CLK
clk => k[7].CLK
clk => k[8].CLK
clk => k[9].CLK
clk => k[10].CLK
clk => k[11].CLK
clk => k[12].CLK
clk => k[13].CLK
clk => k[14].CLK
clk => k[15].CLK
clk => k[16].CLK
clk => k[17].CLK
clk => k[18].CLK
clk => k[19].CLK
clk => k[20].CLK
clk => k[21].CLK
clk => k[22].CLK
clk => k[23].CLK
clk => k[24].CLK
clk => k[25].CLK
clk => k[26].CLK
clk => k[27].CLK
clk => k[28].CLK
clk => k[29].CLK
clk => k[30].CLK
clk => k[31].CLK
clk => clks.CLK
clk => count1[0].CLK
clk => count1[1].CLK
clk => count1[2].CLK
clk => count1[3].CLK
clk => count1[4].CLK
clk => count1[5].CLK
clk => count1[6].CLK
clk => count1[7].CLK
clk => count1[8].CLK
clk => count1[9].CLK
clk => count1[10].CLK
clk => count1[11].CLK
clk => count1[12].CLK
clk => count1[13].CLK
clk => count1[14].CLK
clk => count1[15].CLK
clk => count1[16].CLK
clk => count1[17].CLK
clk => count1[18].CLK
clk => count1[19].CLK
clk => count1[20].CLK
clk => count1[21].CLK
clk => count1[22].CLK
clk => count1[23].CLK
clk => count1[24].CLK
clk => count1[25].CLK
clk => count1[26].CLK
clk => count1[27].CLK
clk => count1[28].CLK
clk => count1[29].CLK
clk => count1[30].CLK
clk => count1[31].CLK
clk => data_out.CLK
clk => data_out_en.CLK
rst => main_count[31].IN0
rst => error~reg0.ACLR
rst => k[0].ACLR
rst => k[1].ACLR
rst => k[2].ACLR
rst => k[3].ACLR
rst => k[4].ACLR
rst => k[5].ACLR
rst => k[6].ACLR
rst => k[7].ACLR
rst => k[8].ACLR
rst => k[9].ACLR
rst => k[10].ACLR
rst => k[11].ACLR
rst => k[12].ACLR
rst => k[13].ACLR
rst => k[14].ACLR
rst => k[15].ACLR
rst => k[16].ACLR
rst => k[17].ACLR
rst => k[18].ACLR
rst => k[19].ACLR
rst => k[20].ACLR
rst => k[21].ACLR
rst => k[22].ACLR
rst => k[23].ACLR
rst => k[24].ACLR
rst => k[25].ACLR
rst => k[26].ACLR
rst => k[27].ACLR
rst => k[28].ACLR
rst => k[29].ACLR
rst => k[30].ACLR
rst => k[31].ACLR
rst => clks.PRESET
rst => count1[0].ACLR
rst => count1[1].ACLR
rst => count1[2].ACLR
rst => count1[3].ACLR
rst => count1[4].ACLR
rst => count1[5].ACLR
rst => count1[6].ACLR
rst => count1[7].ACLR
rst => count1[8].ACLR
rst => count1[9].ACLR
rst => count1[10].ACLR
rst => count1[11].ACLR
rst => count1[12].ACLR
rst => count1[13].ACLR
rst => count1[14].ACLR
rst => count1[15].ACLR
rst => count1[16].ACLR
rst => count1[17].ACLR
rst => count1[18].ACLR
rst => count1[19].ACLR
rst => count1[20].ACLR
rst => count1[21].ACLR
rst => count1[22].ACLR
rst => count1[23].ACLR
rst => count1[24].ACLR
rst => count1[25].ACLR
rst => count1[26].ACLR
rst => count1[27].ACLR
rst => count1[28].ACLR
rst => count1[29].ACLR
rst => count1[30].ACLR
rst => count1[31].ACLR
rst => data_out.PRESET
rst => data_out_en.PRESET
rst => dat_out_temp2[0].ACLR
rst => dat_out_temp2[1].ACLR
rst => dat_out_temp2[2].ACLR
rst => dat_out_temp2[3].ACLR
rst => dat_out_temp2[4].ACLR
rst => dat_out_temp2[5].ACLR
rst => dat_out_temp2[6].ACLR
rst => dat_out_temp2[7].ACLR
rst => dat_out_temp2[8].ACLR
rst => dat_out_temp2[9].ACLR
rst => dat_out_temp2[10].ACLR
rst => dat_out_temp2[11].ACLR
rst => dat_out_temp2[12].ACLR
rst => dat_out_temp2[13].ACLR
rst => dat_out_temp2[14].ACLR
rst => dat_out_temp2[15].ACLR
rst => dat_out_temp2[16].ACLR
rst => dat_out_temp2[17].ACLR
rst => dat_out_temp2[18].ACLR
rst => dat_out_temp2[19].ACLR
rst => dat_out_temp2[20].ACLR
rst => dat_out_temp2[21].ACLR
rst => dat_out_temp2[22].ACLR
rst => dat_out_temp2[23].ACLR
rst => dat_out_temp2[24].ACLR
rst => dat_out_temp2[25].ACLR
rst => dat_out_temp2[26].ACLR
rst => dat_out_temp2[27].ACLR
rst => dat_out_temp2[28].ACLR
rst => dat_out_temp2[29].ACLR
rst => dat_out_temp2[30].ACLR
rst => dat_out_temp2[31].ACLR
rst => dat_out_temp2[32].ACLR
rst => dat_out_temp2[33].ACLR
rst => dat_out_temp2[34].ACLR
rst => dat_out_temp2[35].ACLR
rst => dat_out_temp2[36].ACLR
rst => dat_out_temp2[37].ACLR
rst => dat_out_temp2[38].ACLR
rst => dat_out_temp2[39].ACLR
rst => dat_out_temp1[0].ACLR
rst => dat_out_temp1[1].ACLR
rst => dat_out_temp1[2].ACLR
rst => dat_out_temp1[3].ACLR
rst => dat_out_temp1[4].ACLR
rst => dat_out_temp1[5].ACLR
rst => dat_out_temp1[6].ACLR
rst => dat_out_temp1[7].ACLR
rst => dat_out_temp1[8].ACLR
rst => dat_out_temp1[9].ACLR
rst => dat_out_temp1[10].ACLR
rst => dat_out_temp1[11].ACLR
rst => dat_out_temp1[12].ACLR
rst => dat_out_temp1[13].ACLR
rst => dat_out_temp1[14].ACLR
rst => dat_out_temp1[15].ACLR
rst => dat_out_temp1[16].ACLR
rst => dat_out_temp1[17].ACLR
rst => dat_out_temp1[18].ACLR
rst => dat_out_temp1[19].ACLR
rst => dat_out_temp1[20].ACLR
rst => dat_out_temp1[21].ACLR
rst => dat_out_temp1[22].ACLR
rst => dat_out_temp1[23].ACLR
rst => dat_out_temp1[24].ACLR
rst => dat_out_temp1[25].ACLR
rst => dat_out_temp1[26].ACLR
rst => dat_out_temp1[27].ACLR
rst => dat_out_temp1[28].ACLR
rst => dat_out_temp1[29].ACLR
rst => dat_out_temp1[30].ACLR
rst => dat_out_temp1[31].ACLR
rst => dat_out_temp1[32].ACLR
rst => dat_out_temp1[33].ACLR
rst => dat_out_temp1[34].ACLR
rst => dat_out_temp1[35].ACLR
rst => dat_out_temp1[36].ACLR
rst => dat_out_temp1[37].ACLR
rst => dat_out_temp1[38].ACLR
rst => main_count[31].ENA
rst => main_count[30].ENA
rst => main_count[29].ENA
rst => main_count[28].ENA
rst => main_count[27].ENA
rst => main_count[26].ENA
rst => main_count[25].ENA
rst => main_count[24].ENA
rst => main_count[23].ENA
rst => main_count[22].ENA
rst => main_count[21].ENA
rst => main_count[20].ENA
rst => main_count[19].ENA
rst => main_count[18].ENA
rst => main_count[17].ENA
rst => main_count[16].ENA
rst => main_count[15].ENA
rst => main_count[14].ENA
rst => main_count[13].ENA
rst => main_count[12].ENA
rst => main_count[11].ENA
rst => main_count[10].ENA
rst => main_count[9].ENA
rst => main_count[8].ENA
rst => main_count[7].ENA
rst => main_count[6].ENA
rst => main_count[5].ENA
rst => main_count[4].ENA
rst => main_count[3].ENA
rst => main_count[2].ENA
rst => main_count[1].ENA
rst => main_count[0].ENA
rst => level.ENA
rst => hold_count[31].ENA
rst => hold_count[30].ENA
rst => hold_count[29].ENA
rst => hold_count[28].ENA
rst => hold_count[27].ENA
rst => hold_count[26].ENA
rst => hold_count[25].ENA
rst => hold_count[24].ENA
rst => hold_count[23].ENA
rst => hold_count[22].ENA
rst => hold_count[21].ENA
rst => hold_count[20].ENA
rst => hold_count[19].ENA
rst => hold_count[18].ENA
rst => hold_count[17].ENA
rst => hold_count[16].ENA
rst => hold_count[15].ENA
rst => hold_count[14].ENA
rst => hold_count[13].ENA
rst => hold_count[12].ENA
rst => hold_count[11].ENA
rst => hold_count[10].ENA
rst => hold_count[9].ENA
rst => hold_count[8].ENA
rst => hold_count[7].ENA
rst => hold_count[6].ENA
rst => hold_count[5].ENA
rst => hold_count[4].ENA
rst => hold_count[3].ENA
rst => hold_count[2].ENA
rst => hold_count[1].ENA
rst => hold_count[0].ENA
rst => keep_count[31].ENA
rst => keep_count[30].ENA
rst => keep_count[29].ENA
rst => keep_count[28].ENA
rst => keep_count[27].ENA
rst => keep_count[26].ENA
rst => keep_count[25].ENA
rst => keep_count[24].ENA
rst => keep_count[23].ENA
rst => keep_count[22].ENA
rst => keep_count[21].ENA
rst => keep_count[20].ENA
rst => keep_count[19].ENA
rst => keep_count[18].ENA
rst => keep_count[17].ENA
rst => keep_count[16].ENA
rst => keep_count[15].ENA
rst => keep_count[14].ENA
rst => keep_count[13].ENA
rst => keep_count[12].ENA
rst => keep_count[11].ENA
rst => keep_count[10].ENA
rst => keep_count[9].ENA
rst => keep_count[8].ENA
rst => keep_count[7].ENA
rst => keep_count[6].ENA
rst => keep_count[5].ENA
rst => keep_count[4].ENA
rst => keep_count[3].ENA
rst => keep_count[2].ENA
rst => keep_count[1].ENA
rst => keep_count[0].ENA
rst => ret_count[31].ENA
rst => ret_count[30].ENA
rst => ret_count[29].ENA
rst => ret_count[28].ENA
rst => ret_count[27].ENA
rst => ret_count[26].ENA
rst => ret_count[25].ENA
rst => ret_count[24].ENA
rst => ret_count[23].ENA
rst => ret_count[22].ENA
rst => ret_count[21].ENA
rst => ret_count[20].ENA
rst => ret_count[19].ENA
rst => ret_count[18].ENA
rst => ret_count[17].ENA
rst => ret_count[16].ENA
rst => ret_count[15].ENA
rst => ret_count[14].ENA
rst => ret_count[13].ENA
rst => ret_count[12].ENA
rst => ret_count[11].ENA
rst => ret_count[10].ENA
rst => ret_count[9].ENA
rst => ret_count[8].ENA
rst => ret_count[7].ENA
rst => ret_count[6].ENA
rst => ret_count[5].ENA
rst => ret_count[4].ENA
rst => ret_count[3].ENA
rst => ret_count[2].ENA
rst => ret_count[1].ENA
rst => ret_count[0].ENA
rst => data_buffer.ENA
rst => HU[7]~reg0.ENA
rst => HU[6]~reg0.ENA
rst => HU[5]~reg0.ENA
rst => HU[4]~reg0.ENA
rst => HU[3]~reg0.ENA
rst => HU[2]~reg0.ENA
rst => HU[1]~reg0.ENA
rst => HU[0]~reg0.ENA
rst => TE[7]~reg0.ENA
rst => TE[6]~reg0.ENA
rst => TE[5]~reg0.ENA
rst => TE[4]~reg0.ENA
rst => TE[3]~reg0.ENA
rst => TE[2]~reg0.ENA
rst => TE[1]~reg0.ENA
rst => TE[0]~reg0.ENA
key => TE[0].OUTPUTSELECT
key => TE[1].OUTPUTSELECT
key => TE[2].OUTPUTSELECT
key => TE[3].OUTPUTSELECT
key => TE[4].OUTPUTSELECT
key => TE[5].OUTPUTSELECT
key => TE[6].OUTPUTSELECT
key => TE[7].OUTPUTSELECT
key => HU[0].OUTPUTSELECT
key => HU[1].OUTPUTSELECT
key => HU[2].OUTPUTSELECT
key => HU[3].OUTPUTSELECT
key => HU[4].OUTPUTSELECT
key => HU[5].OUTPUTSELECT
key => HU[6].OUTPUTSELECT
key => HU[7].OUTPUTSELECT
key => data_buffer.OUTPUTSELECT
key => ret_count[0].OUTPUTSELECT
key => ret_count[1].OUTPUTSELECT
key => ret_count[2].OUTPUTSELECT
key => ret_count[3].OUTPUTSELECT
key => ret_count[4].OUTPUTSELECT
key => ret_count[5].OUTPUTSELECT
key => ret_count[6].OUTPUTSELECT
key => ret_count[7].OUTPUTSELECT
key => ret_count[8].OUTPUTSELECT
key => ret_count[9].OUTPUTSELECT
key => ret_count[10].OUTPUTSELECT
key => ret_count[11].OUTPUTSELECT
key => ret_count[12].OUTPUTSELECT
key => ret_count[13].OUTPUTSELECT
key => ret_count[14].OUTPUTSELECT
key => ret_count[15].OUTPUTSELECT
key => ret_count[16].OUTPUTSELECT
key => ret_count[17].OUTPUTSELECT
key => ret_count[18].OUTPUTSELECT
key => ret_count[19].OUTPUTSELECT
key => ret_count[20].OUTPUTSELECT
key => ret_count[21].OUTPUTSELECT
key => ret_count[22].OUTPUTSELECT
key => ret_count[23].OUTPUTSELECT
key => ret_count[24].OUTPUTSELECT
key => ret_count[25].OUTPUTSELECT
key => ret_count[26].OUTPUTSELECT
key => ret_count[27].OUTPUTSELECT
key => ret_count[28].OUTPUTSELECT
key => ret_count[29].OUTPUTSELECT
key => ret_count[30].OUTPUTSELECT
key => ret_count[31].OUTPUTSELECT
key => keep_count[0].OUTPUTSELECT
key => keep_count[1].OUTPUTSELECT
key => keep_count[2].OUTPUTSELECT
key => keep_count[3].OUTPUTSELECT
key => keep_count[4].OUTPUTSELECT
key => keep_count[5].OUTPUTSELECT
key => keep_count[6].OUTPUTSELECT
key => keep_count[7].OUTPUTSELECT
key => keep_count[8].OUTPUTSELECT
key => keep_count[9].OUTPUTSELECT
key => keep_count[10].OUTPUTSELECT
key => keep_count[11].OUTPUTSELECT
key => keep_count[12].OUTPUTSELECT
key => keep_count[13].OUTPUTSELECT
key => keep_count[14].OUTPUTSELECT
key => keep_count[15].OUTPUTSELECT
key => keep_count[16].OUTPUTSELECT
key => keep_count[17].OUTPUTSELECT
key => keep_count[18].OUTPUTSELECT
key => keep_count[19].OUTPUTSELECT
key => keep_count[20].OUTPUTSELECT
key => keep_count[21].OUTPUTSELECT
key => keep_count[22].OUTPUTSELECT
key => keep_count[23].OUTPUTSELECT
key => keep_count[24].OUTPUTSELECT
key => keep_count[25].OUTPUTSELECT
key => keep_count[26].OUTPUTSELECT
key => keep_count[27].OUTPUTSELECT
key => keep_count[28].OUTPUTSELECT
key => keep_count[29].OUTPUTSELECT
key => keep_count[30].OUTPUTSELECT
key => keep_count[31].OUTPUTSELECT
key => hold_count[0].OUTPUTSELECT
key => hold_count[1].OUTPUTSELECT
key => hold_count[2].OUTPUTSELECT
key => hold_count[3].OUTPUTSELECT
key => hold_count[4].OUTPUTSELECT
key => hold_count[5].OUTPUTSELECT
key => hold_count[6].OUTPUTSELECT
key => hold_count[7].OUTPUTSELECT
key => hold_count[8].OUTPUTSELECT
key => hold_count[9].OUTPUTSELECT
key => hold_count[10].OUTPUTSELECT
key => hold_count[11].OUTPUTSELECT
key => hold_count[12].OUTPUTSELECT
key => hold_count[13].OUTPUTSELECT
key => hold_count[14].OUTPUTSELECT
key => hold_count[15].OUTPUTSELECT
key => hold_count[16].OUTPUTSELECT
key => hold_count[17].OUTPUTSELECT
key => hold_count[18].OUTPUTSELECT
key => hold_count[19].OUTPUTSELECT
key => hold_count[20].OUTPUTSELECT
key => hold_count[21].OUTPUTSELECT
key => hold_count[22].OUTPUTSELECT
key => hold_count[23].OUTPUTSELECT
key => hold_count[24].OUTPUTSELECT
key => hold_count[25].OUTPUTSELECT
key => hold_count[26].OUTPUTSELECT
key => hold_count[27].OUTPUTSELECT
key => hold_count[28].OUTPUTSELECT
key => hold_count[29].OUTPUTSELECT
key => hold_count[30].OUTPUTSELECT
key => hold_count[31].OUTPUTSELECT
key => level.OUTPUTSELECT
key => main_count[31].IN1
key => data_out_en.ENA
key => data_out.ENA
key => count1[31].ENA
key => count1[30].ENA
key => count1[29].ENA
key => count1[28].ENA
key => count1[27].ENA
key => count1[26].ENA
key => count1[25].ENA
key => count1[24].ENA
key => count1[23].ENA
key => count1[22].ENA
key => count1[21].ENA
key => count1[20].ENA
key => count1[19].ENA
key => count1[18].ENA
key => count1[17].ENA
key => count1[16].ENA
key => count1[15].ENA
key => count1[14].ENA
key => count1[13].ENA
key => count1[12].ENA
key => count1[11].ENA
key => count1[10].ENA
key => count1[9].ENA
key => count1[8].ENA
key => count1[7].ENA
key => count1[6].ENA
key => count1[5].ENA
key => count1[4].ENA
key => count1[3].ENA
key => count1[2].ENA
key => count1[1].ENA
key => count1[0].ENA
key => clks.ENA
key => k[31].ENA
key => k[30].ENA
key => k[29].ENA
key => k[28].ENA
key => k[27].ENA
key => k[26].ENA
key => k[25].ENA
key => k[24].ENA
key => k[23].ENA
key => k[22].ENA
key => k[21].ENA
key => k[20].ENA
key => k[19].ENA
key => k[18].ENA
key => k[17].ENA
key => k[16].ENA
key => k[15].ENA
key => k[14].ENA
key => k[13].ENA
key => k[12].ENA
key => k[11].ENA
key => k[10].ENA
key => k[9].ENA
key => k[8].ENA
key => k[7].ENA
key => k[6].ENA
key => k[5].ENA
key => k[4].ENA
key => k[3].ENA
key => k[2].ENA
key => k[1].ENA
key => k[0].ENA
key => error~reg0.ENA
dat_bus <> dat_bus
HU[0] <= HU[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HU[1] <= HU[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HU[2] <= HU[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HU[3] <= HU[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HU[4] <= HU[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HU[5] <= HU[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HU[6] <= HU[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HU[7] <= HU[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TE[0] <= TE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TE[1] <= TE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TE[2] <= TE[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TE[3] <= TE[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TE[4] <= TE[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TE[5] <= TE[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TE[6] <= TE[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TE[7] <= TE[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error <= error~reg0.DB_MAX_OUTPUT_PORT_TYPE


|OLED128x32|up_mdu2:u5
ck => fout~reg0.CLK
ck => cnt[0].CLK
ck => cnt[1].CLK
ck => cnt[2].CLK
ck => cnt[3].CLK
ck => cnt[4].CLK
ck => cnt[5].CLK
ck => cnt[6].CLK
ck => cnt[7].CLK
ck => cnt[8].CLK
ck => cnt[9].CLK
ck => cnt[10].CLK
ck => cnt[11].CLK
ck => cnt[12].CLK
ck => cnt[13].CLK
ck => cnt[14].CLK
ck => cnt[15].CLK
ck => cnt[16].CLK
ck => cnt[17].CLK
ck => cnt[18].CLK
ck => cnt[19].CLK
ck => cnt[20].CLK
fout <= fout~reg0.DB_MAX_OUTPUT_PORT_TYPE


|OLED128x32|up_mdu3:u6
ck => fout~reg0.CLK
ck => cnt[0].CLK
ck => cnt[1].CLK
ck => cnt[2].CLK
ck => cnt[3].CLK
ck => cnt[4].CLK
ck => cnt[5].CLK
ck => cnt[6].CLK
ck => cnt[7].CLK
ck => cnt[8].CLK
ck => cnt[9].CLK
ck => cnt[10].CLK
ck => cnt[11].CLK
ck => cnt[12].CLK
ck => cnt[13].CLK
ck => cnt[14].CLK
fout <= fout~reg0.DB_MAX_OUTPUT_PORT_TYPE


|OLED128x32|up_mdu4:u7
ck => fout~reg0.CLK
ck => cnt[0].CLK
ck => cnt[1].CLK
ck => cnt[2].CLK
ck => cnt[3].CLK
ck => cnt[4].CLK
fout <= fout~reg0.DB_MAX_OUTPUT_PORT_TYPE


|OLED128x32|up_mdu5:u8
ck => fout~reg0.CLK
fout <= fout~reg0.DB_MAX_OUTPUT_PORT_TYPE


|OLED128x32|cmd_rom:u9
address[0] => Mux0.IN134
address[0] => romA.RADDR
address[1] => Mux0.IN133
address[1] => romA.RADDR1
address[2] => Mux0.IN132
address[2] => romA.RADDR2
address[3] => Mux0.IN131
address[3] => romA.RADDR3
address[4] => Mux0.IN130
address[4] => romA.RADDR4
address[5] => Mux0.IN129
address[5] => romA.RADDR5
address[6] => Mux0.IN128
address[6] => romA.RADDR6
address[7] => ~NO_FANOUT~
address[8] => ~NO_FANOUT~
address[9] => ~NO_FANOUT~
address[10] => ~NO_FANOUT~
address[11] => ~NO_FANOUT~
address[12] => ~NO_FANOUT~
address[13] => ~NO_FANOUT~
address[14] => ~NO_FANOUT~
address[15] => ~NO_FANOUT~
data_out[0] <= romA.DATAOUT
data_out[1] <= romA.DATAOUT1
data_out[2] <= romA.DATAOUT2
data_out[3] <= romA.DATAOUT3
data_out[4] <= romA.DATAOUT4
data_out[5] <= romA.DATAOUT5
data_out[6] <= romA.DATAOUT6
data_out[7] <= romA.DATAOUT7
DC_data <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


